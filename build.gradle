plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

def build_number = System.getenv('BUILD_NUMBER') ?: 'CUSTOM'

group = package_group
archivesBaseName = "${mod_name}-fabric"
version = "${mc_version}-${mod_version}-${build_number}"

minecraft {
    refmapName = mod_name.toLowerCase() + '-refmap.json'
}

repositories {

}

dependencies {
    implementation "com.google.code.findbugs:jsr305:3.0.2"

    minecraft "com.mojang:minecraft:${project.mc_version}"
    mappings "net.fabricmc:yarn:${project.mappings_version}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.api_version}"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'mcp/mobius/waila/api/**/*'
    exclude 'mcp/mobius/waila/api/impl/**/*'
    archiveClassifier.set('api')
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact remapJar
            artifact sourcesJar
            artifact apiJar
        }
    }
    repositories {
        if (project.hasProperty('aws_access_key_id') && project.hasProperty('aws_secret_access_key')) {
            maven {
                url = "s3://tehnut-mod-maven"
                credentials(AwsCredentials) {
                    accessKey = aws_access_key_id
                    secretKey = aws_secret_access_key
                }
            }
        } else {
            mavenLocal()
        }
    }
}